{"version":3,"sources":["PrimaryDisplay.js","UpdateData.js","SearchButton.js","SearchInput.js","AustralianCitySearch.js","PresetCities.js","WeatherDetails.js","Sidebar.js","resources/darkClouds.jpg","App.js","reportWebVitals.js","index.js"],"names":["PrimaryDisplay","id","class","updateData","dataObject","convertToCelsius","temperature","Math","round","date","Date","document","getElementById","innerText","toDateString","main","temp","temp_max","name","weather","description","undefined","rain","humidity","wind","speed","searchButton","input","value","fetch","then","response","console","log","json","data","catch","err","SearchInput","type","placeholder","onKeyup","onClick","australianCitySearch","city","PresetCities","href","WeatherDetails","color","Sidebar","style","backgroundColor","App","backgroundImage","clouds","backgroundRepeat","backgroundPosition","backgroundSize","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1044dd9d.chunk.js","sourcesContent":["const PrimaryDisplay = () => {\n    return ( \n        <div id=\"primaryDisplay\">\n        <div id=\"summaryDisplay\">\n            <div id=\"tempDataDisplay\">\n                <h1 id=\"temp\"></h1>\n                <div id=\"tempExtremes\">\n                    <h3 id=\"tempMax\" class=\"extreme\"></h3>\n                    <h3 id=\"tempMin\" class=\"extreme\"></h3>\n                </div>\n            </div>\n            <div id=\"conditionsDataDisplay\">\n                <h2 id=\"city\"></h2>\n                <div id=\"currentDate\"></div>\n            </div>\n        </div>\n    </div>\n     );\n}\n \nexport default PrimaryDisplay;","export function updateData(dataObject) {\n    let convertToCelsius = (temperature) => {\n        return Math.round(temperature - 273.15);\n    };\n    let date = new Date();\n    document.getElementById('currentDate').innerText = date.toDateString();\n    document.getElementById('temp').innerText = convertToCelsius(dataObject.main.temp) + \"°\"; \n    document.getElementById('tempMax').innerText = `Max: ${convertToCelsius(dataObject.main.temp_max)}°`;\n    document.getElementById('tempMin').innerText = `Min:  ${convertToCelsius(dataObject.main.temp_max)}°`;\n    document.getElementById('city').innerText = dataObject.name;\n    document.getElementById('weather').innerText = `Weather:     ${dataObject.weather[0].description}`;\n    if(dataObject.rain == undefined) { // checks if rain is present in the data object\n        document.getElementById('rain').innerText = `Rain is not forecast`;\n    } else {\n        document.getElementById('rain').innerText = `Rain: ${dataObject.rain[\"1h\"]}mm`;\n    };\n    document.getElementById('humidity').innerText = `Humidity:     ${dataObject.main.humidity}%`;\n    document.getElementById('windSpeed').innerText = `Wind Speed:     ${dataObject.wind.speed}km/h`;\n}\n \nexport default updateData;","import { updateData } from './UpdateData.js';\n\nexport const searchButton = () => {\n    let search = document.getElementById(\"searchCity\");\n    const apiKey = \"cee839a6ffd7f7659403e88ba136e5fd\";\n    let input = search.value;\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${apiKey}`).then((response) => {\n            console.log('resolved:', response);\n            return response.json(); // parses data into a JS object\n        }).then(data => {\n            console.log(data);\n            updateData(data); // sends returned object data to below function\n        }).catch((err) => {\n            console.log('rejected:');\n        });\n        document.getElementById(\"searchCity\").value = '';\n};\n\nexport default searchButton;","import { searchButton } from './SearchButton.js';\n\nexport const SearchInput = () => {\n    return (\n        <div id=\"searchInput\">\n            <input type=\"text\" id=\"searchCity\" placeholder=\"Enter Location\" />\n            <button class=\"btn\" id=\"submit\" onKeyup={searchButton} onClick={searchButton} >Search</button>\n        </div>\n    );\n}\n\nexport default SearchInput;","import { updateData } from './UpdateData.js';\n\nexport const australianCitySearch = (city) => {\n    console.log(city);\n    const apiKey = \"cee839a6ffd7f7659403e88ba136e5fd\";\n    let input = city;\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${apiKey}`).then((response) => {\n            console.log('resolved:', response);\n            return response.json(); \n        }).then(data => {\n            console.log(data);\n            updateData(data); \n        }).catch((err) => {\n            console.log('rejected:');\n        });\n};\n\nexport default australianCitySearch;","import{ australianCitySearch } from \"./AustralianCitySearch.js\";\n\nconst PresetCities = () => {\n    return ( \n        <div id=\"presetCities\">\n            <h3 id=\"sydney\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Sydney\")}>Sydney</a></h3>\n            <h3 id=\"melbourne\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Melbourne, Victoria, Australia\")}>Melbourne</a></h3>\n            <h3 id=\"brisbane\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Brisbane\")}>Brisbane</a></h3>\n            <h3 id=\"adelaide\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Adelaide\")}>Adelaide</a></h3>\n            <h3 id=\"perth\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Perth\")}>Perth</a></h3>\n            <h3 id=\"hobart\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Hobart\")}>Hobart</a></h3>\n            <h3 id=\"darwin\" class=\"details\"><a href=\"#\" onClick={() => australianCitySearch(\"Darwin\")}>Darwin</a></h3>\n        </div>\n     );\n}\n \nexport default PresetCities;","const WeatherDetails = () => {\n    return ( \n        <div id=\"weatherDetails\">\n            <hr color=\"gray\" />\n            <h3 id=\"weather\" class=\"details\"></h3>\n            <h3 id=\"rain\" class=\"details\"></h3>\n            <h3 id=\"humidity\" class=\"details\"></h3>\n            <h3 id=\"windSpeed\" class=\"details\"></h3>\n            <p></p>\n        </div>\n     )\n};\n \nexport default WeatherDetails;","import SearchInput from './SearchInput';\nimport PresetCities from './PresetCities';\nimport WeatherDetails from './WeatherDetails';\n\nconst Sidebar = () => {\n    return ( \n        <div id=\"searchDisplay\" style={{ backgroundColor: \"rgba(1,1,1,0.3)\" }}>\n            <SearchInput />\n            <PresetCities />\n            <WeatherDetails />\n    </div>\n     );\n}\n \nexport default Sidebar;\n\n","export default __webpack_public_path__ + \"static/media/darkClouds.e4708876.jpg\";","import PrimaryDisplay from './PrimaryDisplay';\nimport Sidebar from './Sidebar';\nimport clouds from './resources/darkClouds.jpg';\n\n\nfunction App() {\n  \n  return (\n    <div id=\"body\" style={{ backgroundImage: `url(${clouds})`, \n                            backgroundRepeat: \"no-repeat\", \n                            backgroundPosition: \"center\", \n                            backgroundSize: \"cover\",\n                            height: \"100vh\"}}>\n      <PrimaryDisplay />\n      <Sidebar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}